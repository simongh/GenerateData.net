//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GenerateData.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class InstallStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InstallStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GenerateData.Resources.Views.Install.InstallStrings", typeof(InstallStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous access.
        /// </summary>
        public static string AnonymousAccess {
            get {
                return ResourceManager.GetString("AnonymousAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please login or email someone@yoursite.com to get a user account..
        /// </summary>
        public static string AnonymousUserDefaultMessage {
            get {
                return ResourceManager.GetString("AnonymousUserDefaultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous users can use the script but have limited access: they cannot save, link to their data sets or generate more than 100 rows at a time..
        /// </summary>
        public static string AnonymousUserDesc {
            get {
                return ResourceManager.GetString("AnonymousUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message to display to anonymous users when trying to save:.
        /// </summary>
        public static string AnonymousUserMessage {
            get {
                return ResourceManager.GetString("AnonymousUserMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Database Info.
        /// </summary>
        public static string CheckDatabaseInfo {
            get {
                return ResourceManager.GetString("CheckDatabaseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete!.
        /// </summary>
        public static string CompleteExcl {
            get {
                return ResourceManager.GetString("CompleteExcl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm File Exists.
        /// </summary>
        public static string ConfirmFileExists {
            get {
                return ResourceManager.GetString("ConfirmFileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create File &amp;raquo;.
        /// </summary>
        public static string CreateFileRightarrow {
            get {
                return ResourceManager.GetString("CreateFileRightarrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Settings File.
        /// </summary>
        public static string CreateSettingsFile {
            get {
                return ResourceManager.GetString("CreateSettingsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Name.
        /// </summary>
        public static string DatabaseName {
            get {
                return ResourceManager.GetString("DatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Language.
        /// </summary>
        public static string DefaultLanguage {
            get {
                return ResourceManager.GetString("DefaultLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string FeatureEnabled {
            get {
                return ResourceManager.GetString("FeatureEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to script &amp;raquo;.
        /// </summary>
        public static string GotoScriptRightarrow {
            get {
                return ResourceManager.GetString("GotoScriptRightarrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The installation script does two things for you. One, it automatically generates a &lt;b&gt;settings.php&lt;/b&gt; file which contains your unique database connection info, so that it knows how to connect to the database whenever you visit the script. Two, it populates the database with various information that it needs: things like general settings, user accounts and raw data like people&apos;s names, country and city names..
        /// </summary>
        public static string HelpIntro {
            get {
                return ResourceManager.GetString("HelpIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just like virtually every other PHP/MySQL script out there, you need to have already created a database before running the installation script. &lt;i&gt;The installation script doesn&apos;t create the database, it just tries to connect to it to create the tables.&lt;/i&gt; If you&apos;re not sure how to create a database within your environment, you&apos;ll either need to contact your hosting provider, or spend some time researching it on Google. Sorry!.
        /// </summary>
        public static string HelpPrereqInfo {
            get {
                return ResourceManager.GetString("HelpPrereqInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre-requisites.
        /// </summary>
        public static string HelpPrerequisites {
            get {
                return ResourceManager.GetString("HelpPrerequisites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host Name.
        /// </summary>
        public static string Hostname {
            get {
                return ResourceManager.GetString("Hostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation.
        /// </summary>
        public static string Installation {
            get {
                return ResourceManager.GetString("Installation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Data Generator has been successfully installed! Click the button below to go to the script..
        /// </summary>
        public static string InstallationCompleteText {
            get {
                return ResourceManager.GetString("InstallationCompleteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This usually occurs when it fails to have permissions to write to the folder. Please manually create this file and place it in the base folder of the Data Generator. When you have done this, button below to continue installing..
        /// </summary>
        public static string InstallationFailedCreateSettingsFileMsg {
            get {
                return ResourceManager.GetString("InstallationFailedCreateSettingsFileMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alrighty, let&apos;s get this sucker installed. Enter your database information to create your database tables. If you&apos;re unsure about any of these fields, click on the Help tab for a little more info..
        /// </summary>
        public static string InstallationIntro {
            get {
                return ResourceManager.GetString("InstallationIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Almost done! Now we&apos;re going to install the plugins: these are what make the Data Generator actually &lt;i&gt;useful&lt;/i&gt; - i.e. the type of data you can generate (Data Types), the format of the generated data (Export Types) and all the Country-specific data like regions and cities..
        /// </summary>
        public static string InstallationPluginIntro {
            get {
                return ResourceManager.GetString("InstallationPluginIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So far so good! Now click the button below to create your &lt;b&gt;settings.php&lt;/b&gt; file. This file is stored in the root folder of this application and is the only place (other than the database) that stores custom information about your installation..
        /// </summary>
        public static string InstallationStep2Intro {
            get {
                return ResourceManager.GetString("InstallationStep2Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have three choices for the way your installation handles user accounts..
        /// </summary>
        public static string InstallationStep3Intro {
            get {
                return ResourceManager.GetString("InstallationStep3Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Plugins &amp;raquo;.
        /// </summary>
        public static string InstallPluginsRightarrow {
            get {
                return ResourceManager.GetString("InstallPluginsRightarrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more detailed information about the installation process, check out our &lt;a href=&quot;http://benkeen.github.io/generatedata/install.html&quot; target=&quot;_blank&quot;&gt;user documentation&lt;/a&gt;..
        /// </summary>
        public static string InstallUserDocLink {
            get {
                return ResourceManager.GetString("InstallUserDocLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Password.
        /// </summary>
        public static string MysqlPassword {
            get {
                return ResourceManager.GetString("MysqlPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySQL Username.
        /// </summary>
        public static string MysqlUsername {
            get {
                return ResourceManager.GetString("MysqlUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single, anonymous user account.
        /// </summary>
        public static string SingleAnonymousUserAccount {
            get {
                return ResourceManager.GetString("SingleAnonymousUserAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Still stuck?.
        /// </summary>
        public static string StillStuck {
            get {
                return ResourceManager.GetString("StillStuck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table Prefix.
        /// </summary>
        public static string TablePrefix {
            get {
                return ResourceManager.GetString("TablePrefix", resourceCulture);
            }
        }
    }
}
